#!/bin/bash -efu

topdir="$(readlink -ev "$0")"
topdir="${topdir%/*/*}"

. "$topdir/testing/sh-functions"

readonly VENDOR=ubuntu
readonly ARCH=x86_64
readonly IMAGE=ubuntu:latest
readonly KERNEL_FLAVOR=-generic
readonly TIMEOUT=${TIMEOUT:-5m}
readonly VENDOR_CMDLINE="rd-debug-udev=1 quiet init=/bin/systemd"

readonly MAKE_INITRD_PACKAGES=(
	"make"
	"udev"
	"libelf1"
	"libkmod2"
	"zlib1g"
	"libbz2-1.0"
	"libzstd1"
	"liblzma5"
)

TESTNAME="$1"; shift

KICKSTART_DISKS=0
BOOT_DISKS=0
BOOT_PROG=
BOOT_CMDLINE="$VENDOR_CMDLINE panic=0"

eval $(sed -n -e 's/^# param //p' "$topdir/testing/$TESTNAME.cfg")

readonly builddir=/srv

readonly workdir="testing/cache/$VENDOR/$TESTNAME"
readonly logdir="testing/logs/$VENDOR/$TESTNAME"

readonly top_workdir="$topdir/$workdir"
readonly top_logdir="$topdir/$logdir"

prepare_testsuite

[ "$#" -gt 0 ] ||
	set -- build-git build-sysimage build-kickstart run-kickstart run-boot

for step in "$@"; do
	case "$step" in
		build-git)
			gh_group_start "building from git tree"

			cat_exec "$top_workdir/run.sh" <<-EOF
			#!/bin/bash -efux

			export DEBIAN_FRONTEND=noninteractive

			apt-get -y -qq update
			apt-get -y -qq install \
			 gcc make automake autoconf pkg-config \
			 udev \
			 libkmod-dev libz-dev libbz2-dev liblzma-dev \
			 libzstd-dev libelf-dev libtirpc-dev libcrypt-dev \
			 help2man

			cd "$builddir"

			./autogen.sh
			./configure \
				--enable-local-build \
				--with-runtimedir=/lib/initrd1
			make
			EOF
			run podman run --rm -ti \
				--volume="$topdir:$builddir" \
				"$IMAGE" "$builddir/$workdir/run.sh"

			gh_group_end
			;;
		build-sysimage)
			if [ -z "$(podman images -an --format='1' -f reference=localhost/mi-$VENDOR:sysimage)" ]; then
				gh_group_start "creating sysimage"

				run podman image build \
					-t "localhost/mi-$VENDOR:sysimage" \
					--pull --squash --force-rm=true \
					-f - <<-EOF
				FROM $IMAGE
				RUN \
				 apt-get -y -qq update
				RUN \
				 DEBIAN_FRONTEND=noninteractive \
				 apt-get -y -qq install linux$KERNEL_FLAVOR \
				 ${MAKE_INITRD_PACKAGES[*]} \
				 mingetty grub2 mdadm lvm2 cryptsetup btrfs-progs e2fsprogs \
				 xfsprogs dosfstools reiserfsprogs zfsutils-linux pwgen
				RUN \
				 apt-get -y -qq clean
				RUN \
				 find /lib/modules \( \
				  -path '*/kernel/sound/*' -o \
				  -path '*/kernel/drivers/media-core/*' -o \
				  -path '*/kernel/drivers/power/*' -o \
				  -path '*/kernel/drivers/video/*' -o \
				  -path '*/kernel/drivers/leds/*' -o \
				  -path '*/kernel/drivers/gpio/*' -o \
				  -path '*/kernel/drivers/bluetooth/*' -o \
				  -path '*/kernel/drivers/watchdog/*' -o \
				  -path '*/kernel/drivers/nfc/*' -o \
				  -path '*/kernel/drivers/hwmon/*' -o \
				  -path '*/kernel/drivers/i2c/*' -o \
				  -path '*/kernel/drivers/iio/*' -o \
				  -path '*/kernel/drivers/isdn/*' -o \
				  -path '*/kernel/drivers/usb/*' -o \
				  -path '*/kernel/drivers/net/wireless/*' -o \
				  -path '*/kernel/drivers/net/usb/*' -o \
				  -path '*/kernel/drivers/input/touchscreen/*' -o \
				  -path '*/kernel/drivers/input/joystick/*' -o \
				  -path '*/kernel/drivers/input/misc/*' \
				  \) -delete; \
				 find /usr/share/locale/ -mindepth 3 -maxdepth 3 -type f -name '*.mo' -delete; \
				 find /usr/share/doc/ /usr/share/man/ /usr/share/info/ -mindepth 1 -delete; \
				 find /var/lib/apt/lists/ /var/cache/apt/ -type f -delete;
				EOF

				gh_group_end
			fi

			. "$topdir/testing/sh-pack-sysimage.sh"
			;;
		build-kickstart)
			gh_group_start "creating kickstart image"

			cat_exec "$top_workdir/run.sh" <<-EOF
			#!/bin/bash -efux

			cat > /etc/initrd.mk <<EOF1
			 AUTODETECT =
			 IMAGEFILE = /boot/initrd-ks.img
			 DISABLE_FEATURES += ucode
			 FEATURES = add-modules add-udev-rules kickstart qemu rdshell modules-virtio
			 MODULES_ADD += sd_mod
			 MODULES_PRELOAD += virtio-blk virtio-scsi virtio-pci
			 KICKSTART_CONFIGS = $builddir/$workdir/ks.cfg
			 PUT_PROGS += pwgen
			EOF1

			export DEBIAN_FRONTEND=noninteractive

			apt-get -y -qq update

			apt-get -y -qq install ${MAKE_INITRD_PACKAGES[*]} \
			 e2fsprogs btrfs-progs xfsprogs dosfstools reiserfsprogs zfsutils-linux \
			 cryptsetup lvm2 mdadm fdisk util-linux rsync wget unzip \
			 tar cpio eject pwgen

			apt-get -y install \
			 linux$KERNEL_FLAVOR

			export PATH="$builddir/.build/dest/usr/sbin:$builddir/.build/dest/usr/bin:\$PATH"

			$builddir/.build/dest/usr/sbin/make-initrd \
				-k \$(find /lib/modules -mindepth 1 -maxdepth 1 -printf '%f\n' -quit)

			cp -L /boot/vmlinuz       $builddir/$workdir/boot-ks-vmlinuz
			cp -L /boot/initrd-ks.img $builddir/$workdir/boot-ks-initrd.img
			EOF

			podman run --rm -ti \
				--volume="$topdir:$builddir" \
				"$IMAGE" "$builddir/$workdir/run.sh"

			gh_group_end
			;;
		run-kickstart)
			. "$topdir/testing/sh-run-kickstart.sh"
			;;
		run-boot)
			. "$topdir/testing/sh-run-boot.sh"
			;;
		*)
			fatal "unknown step: $step"
			;;
	esac
done
